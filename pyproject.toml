[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Gabriel Morales <gabrielmorales1@protonmail.com>"]
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
fastapi = "^0.115.0"
httpx = "^0.27.2"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic = "^2.9.2"
pydantic-settings = "^2.5.2"
pyjwt = "^2.9.0"
python-multipart = "^0.0.9"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.35"}
sqlmodel = "^0.0.22"
uvicorn = {extras = ["standard"], version = "^0.28.0"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.5"
pre-commit = "^3.8.0"

[tool.poetry.group.test.dependencies]
coveralls = "^4.0.1"
freezegun = "^1.5.1"
mypy = "^1.11.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"

[tool.pytest.ini_options]
addopts = "--last-failed --exitfirst --disable-warnings -v"
minversion = "7.4.4"
python_files = ["test_*.py"]
testpaths = ["tests"]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 100
exclude = [
  ".env",
  "venv",
  "migrations",
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
  ".env",
  "venv",
  "migrations",
]
